<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wCWlpYALi4u2CsrK9gpKSn6JiYm+iQkJMyRkZHM////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wCDg4MACAgI2QYGBtkFBQX/AwMD/wICAtyAgIDc////AP//
        /wD///8A////AP///wD///8A////AJiYmAAxMTHYLi4u2CwsLPosLCz6LCwszGtra8yrq6sAq6urAKur
        qwCrq6sAq6urAKurqwCrq6sAq6urAKurqwCrq6sAq6urAF5eXgARERHZCwsL2QYGBv8FBQX/AwMD3IGB
        gdz///8A////AP///wD///8A////AP///wD///8AmZmZADQ0NPoxMTH6Ly8vYTIyMmE1NTX/RkZG/1dX
        V/9XV1f/V1dX/1dXV/9XV1f/V1dX/1dXV/9XV1f/V1dX/1dXV/9XV1f/ODg4/xoaGv8RERH/CAgITwYG
        Bk8FBQXvgoKC7////wD///8A////AP///wD///8A////AP///wCbm5sANzc3+jQ0NPoyMjJhMjIyYTIy
        Mv9KZlb/Ypt6/2Sbe/9nm33/Zpt7/2Wbev9fmnf/Wpp1/1iadf9WmnX/VJp0/1OadP80V0T/FRUV/w8P
        D/8KCgpPCAgITwcHB++Dg4Pv////AP///wD///8A////AP///wD///8A////AJycnAA6Ojr/Nzc3/zU1
        NcYyMjLGMDAw9U+HZvVu353+ct+g/nfgo/514KD+c+Ce/mjemP5e3ZP+Wd2T/lXek/5S3pL+UN6R/jB3
        UP4QEBD0Dg4O9AwMDKQKCgqkCQkJ/4SEhP////8A////AP///wD///8A////AP///wD///8Anp6eAD09
        Pf86Ojr/ODg4xjU1NcYzMzP1SIRX9V7VfP5i2IX+Z9uO/mDaif5a2IT+YNV+/mfSeP52znX+hctx/onI
        bP6Nxmj+UGw9/hISEvQQEBD0Dg4OpAwMDKQLCwv/hYWF/////wD///8A////AP///wD///8A////AP//
        /wCfn58AQEBA0D09PdA7OztsODg4bDY2NtVCgEnVT8tc/1PRa/9X13r/TNRy/0LRav9ZzGT/cMde/5O/
        V/+2uFD/wLNH/8uuP/9wYSr/FRUV1xMTE9cRERFsDw8PbA0NDdCGhobQ////AP///wD///8A////AP//
        /wD///8A////AKCgoABCQkLQQEBA0D09PWw7OztsODg41UOARNVPx1D/UMhR/1HIU/9vx1z/jcdl/6LD
        Yv+3wGD/ybxd/9q4Wv/Wtlz/07Re/3VmOv8XFxfXFRUV1xMTE2wRERFsDw8P0IeHh9D///8A////AP//
        /wD///8A////AP///wD///8AoqKiAEVFRd9CQkLfQEBAwz09PcM7OzvQRX9A0E/ERf9Nvzj/S7os/5G7
        Rv/YvWD/67th//+6Yv//uWP//7ll/+26cf/bu33/empL/xoaGtIXFxfSFRUVwxMTE8MRERHfiIiI3///
        /wD///8A////AP///wD///8A////AP///wCjo6MASEhI30VFRd9DQ0PDQEBAwz4+PtBSfz3QZ8E9/33A
        RP+Uv0r/v79Z/+u/aP/1vmb//7xk/+q/dv/Wwoj/vMeh/6HNu/9fdWv/HBwc0hoaGtIXFxfDFRUVwxMT
        E9+JiYnf////AP///wD///8A////AP///wD///8A////AKWlpQBLS0vaSEhI2kZGRqJDQ0OiQUFBz2CA
        O89/vzb/rsJP/93Faf/uw2z//8Jw///Aa///v2f/1sWJ/67LrP+L1dL/aOD5/0N/jP8fHx/QHBwc0Boa
        GqIYGBiiFhYW2oqKitr///8A////AP///wD///8A////AP///wD///8ApqamAE5OTtpLS0vaSUlJokZG
        RqJERETPf4NLz7vCUv/UxGH/7sZw//bFcP//w3H//8Jt///Baf/RyZP/o9G9/5HZ1/+A4vL/UYGJ/yEh
        IdAfHx/QHR0dohoaGqIYGBjai4uL2v///wD///8A////AP///wD///8A////AP///wCoqKgAUVFR1E5O
        TtRMTEyBSUlJgUdHR8yfhlrM+MZu//vHcv//yHf//8Z0///Fcv//xG///8Rs/8vOnf+Y2M//mN7d/5nk
        6/9ehIf/JCQkziIiIs4gICCBHR0dgRsbG9SNjY3U////AP///wD///8A////AP///wD///8A////AKmp
        qQBTU1PUUVFR1E5OToFTU1OBV1dXzH9zXcynjmL/qY9k/6uPZ/+rjmX/q45k/6uNY/+rjWH/kZJ6/3eX
        k/93mpr/eJ2h/09iZP8nJyfOJCQkziIiIoEgICCBHR0d1I6OjtT///8A////AP///wD///8A////AP//
        /wD///8AqqqqAFZWVuJTU1PiUVFR0FxcXNBoaGj/X19f/1dXV/9XV1f/V1dX/1dXV/9XV1f/V1dX/1dX
        V/9XV1f/V1dX/1dXV/9XV1f/QEBA/yoqKvYnJyf2JSUl0CIiItAgICDij4+P4v///wD///8A////AP//
        /wD///8A////AP///wCrq6sAWFhY4lZWVuJUVFTQWFhY0F1dXf9gfGv/ZJx6/2ecfP9pnX3/aJ18/2ed
        e/9inHj/XZt2/1qbdv9YnHb/V5x1/1acdf9BZFH/LS0t9ioqKvYoKCjQJSUl0CMjI+KRkZHi////AP//
        /wD///8A////AP///wD///8A////AK2trQBbW1vUWVlZ1FdXV4FUVFSBUlJSzWKaeM1y4p7/d+Kh/3zj
        pP9646L/eOOg/23hmv9j4JX/XuCV/1rhlf9X4ZT/VeKT/0KJYf8wMDDQLS0t0CsrK4EoKCiBJiYm1JKS
        ktT///8A////AP///wD///8A////AP///wD///8Arq6uAF1dXdRbW1vUWVlZgVdXV4FUVFTNWpVozWDW
        ff9l2Yb/ad2P/2Pbiv9d2oX/Y9Z//2nTef940Hb/iMxy/4zKbf+QyGn/YX1O/zMzM9AwMDDQLi4ugSsr
        K4EpKSnUlJSU1P///wD///8A////AP///wD///8A////AP///wCvr68AYGBg2l5eXtpcXFyiWVlZoldX
        V89TkVnPT8tc/1PRa/9X13r/TNRy/0LRav9ZzGT/cMde/5O/V/+2uFD/wLNH/8uuP/+Acjr/NjY20DMz
        M9AxMTGiLi4uoiwsLNqVlZXa////AP///wD///8A////AP///wD///8A////ALCwsABiYmLaYGBg2l5e
        XqJbW1uiWVlZz1SQVc9Px1D/UMhR/1HIU/9vx1z/jcdl/6LDYv+3wGD/ybxd/9q4Wv/Wtlz/07Re/4V2
        S/84ODjQNjY20DMzM6IxMTGiLi4u2paWltr///8A////AP///wD///8A////AP///wD///8AsbGxAGRk
        ZN9iYmLfYGBgw15eXsNcXFzQVZBQ0E/ERf9Nvzj/S7os/5G7Rv/YvWD/67th//+6Yv//uWP//7ll/+26
        cf/bu33/i3tc/zs7O9I4ODjSNjY2wzMzM8MxMTHfmJiY3////wD///8A////AP///wD///8A////AP//
        /wCysrIAZmZm32RkZN9iYmLDYGBgw15eXtBikE7QZ8E9/33ARP+Uv0r/v79Z/+u/aP/1vmb//7xk/+q/
        dv/Wwoj/vMeh/6HNu/9vhXz/Pj4+0js7O9I5OTnDNjY2wzQ0NN+ZmZnf////AP///wD///8A////AP//
        /wD///8A////ALOzswBoaGjRZmZm0WVlZYRjY2OEYWFh1HCQS9R/vzb/rsJP/93Faf/uw2z//8Jw///A
        a///v2f/1sWJ/67LrP+L1dL/aOD5/1SQnf9BQUHWPj4+1jw8PGw5OTlsNzc30Jubm9D///8A////AP//
        /wD///8A////AP///wD///8AtLS0AGpqatFoaGjRZ2dnhGVlZYRjY2PUio9a1LK8Uf/Lvl//5MBu/+y+
        bv/1vW//9btr//W6Z//GwpL/l8u8/4XT1/902/H/XI+a/0RERNZBQUHWPz8/bDw8PGw6OjrQnJyc0P//
        /wD///8A////AP///wD///8A////AP///wC1tbUAbGxs/2pqav9paWntZ2dn7WVlZfqlj2j65bps9ui7
        cPbsvHT267px9uu4bvbrt2v267Zo9rXAmvaAy832gNHb9oDX6vZjj5j2R0dH+kRERPpCQkLMPz8/zD09
        Pf+enp7/////AP///wD///8A////AP///wD///8A////ALa2tgBtbW3/bGxs/2pqau1oaGjtZ2dn+oJ3
        ZPqeiGH2n4lj9qGJZfahiGT2oYdi9qGHYfahhl/2hot49muRkvZrlJn2a5eg9lpwdfZKSkr6R0dH+kVF
        RcxCQkLMQEBA/5+fn/////8A////AP///wD///8A////AP///wD///8At7e3AG9vb/htbW34bGxsm2pq
        aptpaWn/YGBg/1dXV/9XV1f/V1dX/1dXV/9XV1f/V1dX/1dXV/9XV1f/V1dX/1dXV/9XV1f/UlJS/01N
        Tf9KSkr/SEhIjUVFRY1DQ0PVoaGh1f///wD///8A////AP///wD///8A////AP///wC3t7cAcHBw+G5u
        bvhtbW2bbGxsm2tra/+Li4v/q6ur/6urq/+rq6v/q6ur/6urq/+rq6v/q6ur/6urq/+rq6v/q6ur/6ur
        q/99fX3/T09P/01NTf9KSkqNSEhIjUZGRtWioqLV////AP///wD///8A////AP///wD///8A////ALi4
        uABxcXHUcHBw1G9vb/Nubm7zbW1t3ba2tt3///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AKioqABSUlLWT09P1k1NTflLS0v5SUlJ16SkpNf///8A////AP///wD///8A////AP//
        /wD///8A29vbALi4uNS3t7fUt7e387a2tvO2trbd2tra3f///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A09PTAKioqNanp6fWpqam+aWlpfmkpKTX0dHR1////wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A8D/8D/A//A/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/A//A/wP/wP//////////8=
</value>
  </data>
</root>